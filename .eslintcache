[{"D:\\dev\\user-banking\\client\\src\\components\\History\\index.js":"1","D:\\dev\\user-banking\\client\\src\\components\\Nav\\index.js":"2","D:\\dev\\user-banking\\client\\src\\api\\login.js":"3","D:\\dev\\user-banking\\client\\src\\api\\history.js":"4","D:\\dev\\user-banking\\client\\src\\components\\RecipientList\\index.js":"5","D:\\dev\\user-banking\\client\\src\\components\\common\\ListAccount.js":"6","D:\\dev\\user-banking\\client\\src\\index.js":"7","D:\\dev\\user-banking\\client\\src\\actions\\loginWithJWT.js":"8","D:\\dev\\user-banking\\client\\src\\components\\pages\\Login.js":"9","D:\\dev\\user-banking\\client\\src\\components\\pages\\Home.js":"10","D:\\dev\\user-banking\\client\\src\\reducers\\loginReducer.js":"11","D:\\dev\\user-banking\\client\\src\\reducers\\history.js":"12","D:\\dev\\user-banking\\client\\src\\api\\loginWithJWT.js":"13","D:\\dev\\user-banking\\client\\src\\actions\\login.js":"14","D:\\dev\\user-banking\\client\\src\\components\\common\\News.js":"15","D:\\dev\\user-banking\\client\\src\\components\\InternalTransfer\\index.js":"16","D:\\dev\\user-banking\\client\\src\\components\\common\\Title.js":"17","D:\\dev\\user-banking\\client\\src\\actions\\recipientList.js":"18","D:\\dev\\user-banking\\client\\src\\api\\recipientList.js":"19","D:\\dev\\user-banking\\client\\src\\components\\common\\FormOtp.js":"20","D:\\dev\\user-banking\\client\\src\\actions\\internalTransfer.js":"21","D:\\dev\\user-banking\\client\\src\\api\\internalTransfer.js":"22","D:\\dev\\user-banking\\client\\src\\reducers\\recipientLists.js":"23","D:\\dev\\user-banking\\client\\src\\reducers\\internalTransfer.js":"24","D:\\dev\\user-banking\\client\\src\\reducers\\accountLists.js":"25","D:\\dev\\user-banking\\client\\src\\constants\\actionTypes.js":"26","D:\\dev\\user-banking\\client\\src\\components\\DashBoard\\index.js":"27","D:\\dev\\user-banking\\client\\src\\components\\InterBank\\index.js":"28","D:\\dev\\user-banking\\client\\src\\components\\DebtReminder\\index.js":"29","D:\\dev\\user-banking\\client\\src\\actions\\history.js":"30","D:\\dev\\user-banking\\client\\src\\components\\common\\FormTransfer.js":"31","D:\\dev\\user-banking\\client\\src\\components\\Menu\\index.js":"32","D:\\dev\\user-banking\\client\\src\\actions\\logout.js":"33","D:\\dev\\user-banking\\client\\src\\App.js":"34","D:\\dev\\user-banking\\client\\src\\helpers\\otp.js":"35"},{"size":9235,"mtime":1607173022343,"results":"36","hashOfConfig":"37"},{"size":5332,"mtime":1607149285850,"results":"38","hashOfConfig":"37"},{"size":634,"mtime":1607503905024,"results":"39","hashOfConfig":"37"},{"size":367,"mtime":1607149285828,"results":"40","hashOfConfig":"37"},{"size":7467,"mtime":1607171675037,"results":"41","hashOfConfig":"37"},{"size":2938,"mtime":1607171663168,"results":"42","hashOfConfig":"37"},{"size":658,"mtime":1606745684113,"results":"43","hashOfConfig":"37"},{"size":975,"mtime":1607514145213,"results":"44","hashOfConfig":"37"},{"size":5639,"mtime":1607514163786,"results":"45","hashOfConfig":"37"},{"size":2667,"mtime":1606984900016,"results":"46","hashOfConfig":"37"},{"size":1371,"mtime":1606745684115,"results":"47","hashOfConfig":"37"},{"size":1017,"mtime":1607149285852,"results":"48","hashOfConfig":"37"},{"size":280,"mtime":1607505278756,"results":"49","hashOfConfig":"37"},{"size":1002,"mtime":1607514140946,"results":"50","hashOfConfig":"37"},{"size":72,"mtime":1606745684076,"results":"51","hashOfConfig":"37"},{"size":1554,"mtime":1606901077670,"results":"52","hashOfConfig":"37"},{"size":378,"mtime":1606745684077,"results":"53","hashOfConfig":"37"},{"size":2066,"mtime":1606901077663,"results":"54","hashOfConfig":"37"},{"size":988,"mtime":1606901077665,"results":"55","hashOfConfig":"37"},{"size":3178,"mtime":1607509756950,"results":"56","hashOfConfig":"37"},{"size":905,"mtime":1607509568727,"results":"57","hashOfConfig":"37"},{"size":665,"mtime":1606901077664,"results":"58","hashOfConfig":"37"},{"size":787,"mtime":1606901077678,"results":"59","hashOfConfig":"37"},{"size":1438,"mtime":1606901077678,"results":"60","hashOfConfig":"37"},{"size":565,"mtime":1606745684114,"results":"61","hashOfConfig":"37"},{"size":1029,"mtime":1606984900019,"results":"62","hashOfConfig":"37"},{"size":835,"mtime":1606901077668,"results":"63","hashOfConfig":"37"},{"size":302,"mtime":1606745684069,"results":"64","hashOfConfig":"37"},{"size":297,"mtime":1606984900008,"results":"65","hashOfConfig":"37"},{"size":891,"mtime":1607149285823,"results":"66","hashOfConfig":"37"},{"size":6044,"mtime":1606901077673,"results":"67","hashOfConfig":"37"},{"size":5209,"mtime":1607149285849,"results":"68","hashOfConfig":"37"},{"size":385,"mtime":1607511005048,"results":"69","hashOfConfig":"37"},{"size":1156,"mtime":1607513283755,"results":"70","hashOfConfig":"37"},{"size":235,"mtime":1606901077675,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},"fgjpw5",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"75"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\dev\\user-banking\\client\\src\\components\\History\\index.js",["149","150"],"import React, { useEffect, useState } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Title from \"../common/Title\";\r\nimport { fetchHistory } from \"../../actions/history\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport dateFormat from \"dateformat\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport { InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from \"../common/Pagination\";\r\n\r\nconst useStyles = makeStyles({\r\n    receiveColor: {\r\n        color: \"#4287f5\",\r\n        fontWeight: \"bold\",\r\n    },\r\n});\r\nconst History = () => {\r\n    let history = useSelector((state) => state.history);\r\n    const classes = useStyles();\r\n    const pageSize = 10;\r\n    const totalRows = history.totalRows;\r\n    // let totalPages = Math.ceil(totalRows / pageSize);\r\n    // totalPages = Math.ceil(totalRows / pageSize);\r\n    const [totalPages, setTotalPages] = useState(\r\n        Math.ceil(totalRows / pageSize)\r\n    );\r\n\r\n    const accountNumber = useSelector(\r\n        (state) => state.loginReducer.accountNumber\r\n    );\r\n    const [rowsTable, setRowsTable] = useState(\"\");\r\n    const [filterLists, setFilterLists] = useState([]);\r\n    const [selectType, setSelectType] = useState(\"all\");\r\n    const [filter, setFilter] = useState({\r\n        sortDate: true,\r\n        sortMoney: true,\r\n        sortType: true,\r\n    });\r\n\r\n    // console.log(\"account number\", accountNumber);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchHistory(accountNumber));\r\n    }, [accountNumber]);\r\n    // console.log(\"history\", history);\r\n\r\n    useEffect(() => {\r\n        if (history.transactionLists.length > 0) {\r\n            setFilterLists(history.transactionLists);\r\n        }\r\n        setTotalPages(Math.ceil(history.totalRows / pageSize));\r\n        // console.log(\"math\", Math.ceil(history.totalRows / pageSize));\r\n    }, [history]);\r\n\r\n    useEffect(() => {\r\n        const rows = filterLists.map((item, key) => (\r\n            <TableRow key={key}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    {/* {key + 1} */}\r\n                    {history.page >= 2\r\n                        ? key + 1 + (history.page - 1) * history.limit\r\n                        : key + 1}\r\n                </TableCell>\r\n                <TableCell align=\"left\">\r\n                    {item.accountDest === accountNumber\r\n                        ? `(myself)`\r\n                        : item.accountDest}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                    <b>\r\n                        {item.mount.toLocaleString(\"it-IT\", {\r\n                            // style: \"currency\",\r\n                            currency: \"VND\",\r\n                        })}{\" \"}\r\n                        VND\r\n                    </b>\r\n                </TableCell>\r\n                <TableCell\r\n                    className={\r\n                        item.typeTrans === \"receive\" ? classes.receiveColor : \"\"\r\n                    }\r\n                    align=\"center\"\r\n                >\r\n                    {item.typeTrans}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                    {item.detail || \"no comments\"}\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                    {/* {dateFormat(item.date, \"HH:MM:ss' - 'yyyy-mm-dd\")} */}\r\n                    {dateFormat(item.date, \"HH:MM' - 'yyyy-mm-dd\")}\r\n                </TableCell>\r\n            </TableRow>\r\n        ));\r\n        setRowsTable(rows);\r\n    }, [filterLists, filter]);\r\n\r\n    const handleSortDate = () => {\r\n        const lists = filterLists.sort((a, b) => {\r\n            if (a.date < b.date) return filter.sortDate ? 1 : -1;\r\n            if (a.date > b.date) return !filter.sortDate ? 1 : -1;\r\n            return 0;\r\n        });\r\n        setFilterLists(lists);\r\n        setFilter({\r\n            sortDate: !filter.sortDate,\r\n        });\r\n    };\r\n\r\n    const handleSortMoney = () => {\r\n        const lists = filterLists.sort((a, b) => {\r\n            if (a.mount < b.mount) return filter.sortMoney ? 1 : -1;\r\n            if (a.mount > b.mount) return !filter.sortMoney ? 1 : -1;\r\n            return 0;\r\n        });\r\n        setFilterLists(lists);\r\n        setFilter({\r\n            sortMoney: !filter.sortMoney,\r\n        });\r\n    };\r\n\r\n    const handleSelectType = (e) => {\r\n        const value = e.target.value;\r\n        setSelectType(value);\r\n        if (value === \"all\") {\r\n            dispatch(fetchHistory(accountNumber, 1, pageSize));\r\n            setFilterLists(history.transactionLists);\r\n            return;\r\n        }\r\n        // filter\r\n        dispatch(fetchHistory(accountNumber, 1, pageSize, value));\r\n        const lists = history.transactionLists.filter((item) => {\r\n            return item.typeTrans === value;\r\n        });\r\n        setFilterLists(lists);\r\n        setFilter({\r\n            sortType: !filter.sortType,\r\n        });\r\n    };\r\n\r\n    const handlePageChange = (pageNumber) => {\r\n        // console.log(\"page ch his\", pageNumber);\r\n        if (selectType !== \"all\") {\r\n            dispatch(\r\n                fetchHistory(accountNumber, pageNumber, pageSize, selectType)\r\n            );\r\n        } else {\r\n            dispatch(fetchHistory(accountNumber, pageNumber, pageSize));\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Grid item xs={12} sm={10} md={10}>\r\n                <Title>My history transaction</Title>\r\n                <div style={{ height: \"20px\" }}></div>\r\n\r\n                <InputLabel id=\"label \">Type transaction</InputLabel>\r\n                <div style={{ height: \"10px\" }}></div>\r\n\r\n                <Select\r\n                    labelId=\"label\"\r\n                    id=\"select\"\r\n                    value={selectType}\r\n                    style={{ width: \"150px\" }}\r\n                    onChange={handleSelectType}\r\n                >\r\n                    <MenuItem value=\"all\">All</MenuItem>\r\n                    <MenuItem value=\"transfer\">Transfer</MenuItem>\r\n                    <MenuItem value=\"receive\">Receive</MenuItem>\r\n                </Select>\r\n                <div style={{ height: \"20px\" }}></div>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"caption table\">\r\n                        {/* <caption>A basic table example with a caption</caption> */}\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Index</TableCell>\r\n                                <TableCell align=\"left\">\r\n                                    Recipient number\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    align=\"center\"\r\n                                    onClick={handleSortMoney}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                >\r\n                                    Money\r\n                                    {filter.sortMoney ? (\r\n                                        <KeyboardArrowDownIcon fontSize=\"small\" />\r\n                                    ) : (\r\n                                        <KeyboardArrowUpIcon fontSize=\"small\" />\r\n                                    )}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">Type</TableCell>\r\n                                <TableCell align=\"center\">Detail</TableCell>\r\n                                <TableCell\r\n                                    align=\"center\"\r\n                                    onClick={handleSortDate}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                >\r\n                                    Date\r\n                                    {filter.sortDate ? (\r\n                                        <KeyboardArrowDownIcon fontSize=\"small\" />\r\n                                    ) : (\r\n                                        <KeyboardArrowUpIcon fontSize=\"small\" />\r\n                                    )}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {/* // */}\r\n                            {rowsTable || null}\r\n                            {/* // */}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Pagination\r\n                    totalPages={totalPages}\r\n                    onPageChange={handlePageChange}\r\n                />\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default History;\r\n",["151","152"],"D:\\dev\\user-banking\\client\\src\\components\\Nav\\index.js",[],"D:\\dev\\user-banking\\client\\src\\api\\login.js",[],"D:\\dev\\user-banking\\client\\src\\api\\history.js",[],["153","154"],"D:\\dev\\user-banking\\client\\src\\components\\RecipientList\\index.js",["155","156"],"import React, { useEffect, useState } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Button, Grid, TextField } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    addRecipient,\r\n    fetchRecipientLists,\r\n    updateARecipient,\r\n    deleteARecipient,\r\n} from \"../../actions/recipientList\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst RecipientList = () => {\r\n    const recipientList = useSelector((state) => state.recipientLists);\r\n    const accountNumber = useSelector(\r\n        (state) => state.loginReducer[\"accountNumber\"]\r\n    );\r\n    const [isTable, setIsTable] = useState(true);\r\n    const [stateAddOrEdit, setStateAddOrEdit] = useState(\"add\");\r\n    const [rows, setRows] = useState(\"\");\r\n    const [itemFocus, setItemFocus] = useState({\r\n        number: \"\",\r\n        name: \"\",\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchRecipientLists(accountNumber));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (recipientList.lists.length > 0) {\r\n            const row = recipientList.lists.map((row, index) => (\r\n                <TableRow key={row.number + index + 1}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        {index + 1}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\">{row.number}</TableCell>\r\n                    <TableCell align=\"left\">{row.name}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            onClick={() => handleClickRow(row, \"edit\")}\r\n                            size=\"small\"\r\n                        >\r\n                            <EditIcon fontSize=\"small\" />\r\n                        </Button>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                        <Button\r\n                            color=\"secondary\"\r\n                            variant=\"contained\"\r\n                            onClick={() => handleClickRow(row, \"del\")}\r\n                            size=\"small\"\r\n                        >\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </Button>\r\n                    </TableCell>\r\n                </TableRow>\r\n            ));\r\n            setRows(row);\r\n        }\r\n    }, [recipientList]);\r\n\r\n    const handleClickRow = async (row, type) => {\r\n        // console.log(type, row);\r\n        if (type === \"edit\") {\r\n            setStateAddOrEdit(\"edit\");\r\n            setIsTable(false);\r\n            setItemFocus(row);\r\n            // handle edit\r\n        } else if (type === \"del\") {\r\n            // handle del\r\n            if (window.confirm(\"Do you really want to DELETE?\")) {\r\n                await dispatch(deleteARecipient(accountNumber, row));\r\n                dispatch(fetchRecipientLists(accountNumber));\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleClickAddNew = () => {\r\n        setStateAddOrEdit(\"add\");\r\n        setIsTable(!isTable);\r\n        setItemFocus({ number: \"\", name: \"\" });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (stateAddOrEdit === \"edit\") {\r\n            // check không có thay đổi thì ko update\r\n            await dispatch(updateARecipient(accountNumber, itemFocus));\r\n            dispatch(fetchRecipientLists(accountNumber));\r\n            setIsTable(!isTable);\r\n        } else if (stateAddOrEdit === \"add\") {\r\n            // reset state adding: isAdd set false\r\n            await dispatch({ type: \"SET_ADD_RECIPIENT_FAIL\" });\r\n\r\n            await dispatch(addRecipient(accountNumber, itemFocus));\r\n            //  console.log(\"dis add\", itemFocus);\r\n            if (recipientList.isAdd === true) {\r\n                console.log(\"s\", recipientList.isAdd);\r\n                setIsTable(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    const onChangeInput = (e) => {\r\n        setItemFocus({\r\n            ...itemFocus,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Grid item xs={12} sm={10} md={8}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClickAddNew}\r\n            >\r\n                {isTable ? \"+ Add\" : \"Close\"}\r\n            </Button>\r\n            <br />\r\n            <br />\r\n\r\n            {!isTable ? (\r\n                <>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            name=\"number\"\r\n                            fullWidth\r\n                            label=\"Account number\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            value={itemFocus.number}\r\n                            onChange={onChangeInput}\r\n                        />\r\n                        <TextField\r\n                            name=\"name\"\r\n                            fullWidth\r\n                            label=\"Name\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            value={itemFocus.name}\r\n                            onChange={onChangeInput}\r\n                        />\r\n                        <div style={{ height: \"20px\" }}></div>\r\n\r\n                        <Button\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            {stateAddOrEdit === \"add\" ? \"Add new\" : \"Update\"}\r\n                        </Button>\r\n                    </form>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"caption table\">\r\n                            {/* <caption>A basic table example with a caption</caption> */}\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Index</TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                        Account number\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">Name</TableCell>\r\n                                    <TableCell align=\"center\">Edit</TableCell>\r\n                                    <TableCell align=\"center\">Delete</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {/* // */}\r\n                                {rows || null}\r\n                                {/* // */}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </>\r\n            )}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default RecipientList;\r\n","D:\\dev\\user-banking\\client\\src\\components\\common\\ListAccount.js",[],["157","158"],"D:\\dev\\user-banking\\client\\src\\index.js",[],"D:\\dev\\user-banking\\client\\src\\actions\\loginWithJWT.js",[],"D:\\dev\\user-banking\\client\\src\\components\\pages\\Login.js",[],"D:\\dev\\user-banking\\client\\src\\components\\pages\\Home.js",[],"D:\\dev\\user-banking\\client\\src\\reducers\\loginReducer.js",[],"D:\\dev\\user-banking\\client\\src\\reducers\\history.js",[],"D:\\dev\\user-banking\\client\\src\\api\\loginWithJWT.js",[],"D:\\dev\\user-banking\\client\\src\\actions\\login.js",[],"D:\\dev\\user-banking\\client\\src\\components\\common\\News.js",[],"D:\\dev\\user-banking\\client\\src\\components\\InternalTransfer\\index.js",["159"],"import { Grid } from \"@material-ui/core\";\r\nimport Title from \"../common/Title\";\r\nimport FormTransfer from \"../common/FormTransfer\";\r\nimport FormOtp from \"../common/FormOtp\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchRecipientLists } from \"../../actions/recipientList\";\r\n\r\nconst InternalTransfer = () => {\r\n    const infoAccount = useSelector((state) => state.loginReducer);\r\n    const recipientLists = useSelector((state) => state.recipientLists.lists);\r\n    const internalTransfer = useSelector((state) => state.internalTransfer);\r\n    const [state, setState] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (recipientLists.length <= 0) {\r\n            dispatch(fetchRecipientLists(infoAccount.accountNumber));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setState(internalTransfer.isWaitingOTP);\r\n    }, [internalTransfer]);\r\n\r\n    // console.log(\"is\", internalTransfer);\r\n    return (\r\n        <Grid item xs={12} sm={8} md={6}>\r\n            <Title>Internal Transfer</Title>\r\n            {state === false ? (\r\n                <FormTransfer\r\n                    infoAccount={infoAccount}\r\n                    recipientLists={recipientLists}\r\n                />\r\n            ) : (\r\n                <FormOtp\r\n                    infoAccount={infoAccount}\r\n                    originHash={internalTransfer.hash}\r\n                ></FormOtp>\r\n            )}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default InternalTransfer;\r\n","D:\\dev\\user-banking\\client\\src\\components\\common\\Title.js",[],"D:\\dev\\user-banking\\client\\src\\actions\\recipientList.js",[],"D:\\dev\\user-banking\\client\\src\\api\\recipientList.js",[],"D:\\dev\\user-banking\\client\\src\\components\\common\\FormOtp.js",[],"D:\\dev\\user-banking\\client\\src\\actions\\internalTransfer.js",[],"D:\\dev\\user-banking\\client\\src\\api\\internalTransfer.js",[],"D:\\dev\\user-banking\\client\\src\\reducers\\recipientLists.js",[],"D:\\dev\\user-banking\\client\\src\\reducers\\internalTransfer.js",[],"D:\\dev\\user-banking\\client\\src\\reducers\\accountLists.js",[],"D:\\dev\\user-banking\\client\\src\\constants\\actionTypes.js",[],"D:\\dev\\user-banking\\client\\src\\components\\DashBoard\\index.js",["160"],"import Grid from \"@material-ui/core/Grid\";\r\nimport Title from \"../common/Title\";\r\nimport ListAccount from \"../common/ListAccount\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { fetchInfoAccount } from \"../../actions/fetchInfoAccount\";\r\n\r\nexport default function DashBoard() {\r\n    const account = useSelector((state) => state.loginReducer[\"accountNumber\"]);\r\n    const accountLists = useSelector((state) => state.accountLists);\r\n    const dispatch = useDispatch();\r\n    // console.log(\"acc\", accountLists);\r\n    useEffect(() => {\r\n        dispatch(fetchInfoAccount(account));\r\n    }, [account]);\r\n    return (\r\n        <Grid item xs={12} sm={8} md={6}>\r\n            <Title>My account</Title>\r\n            <ListAccount accountLists={accountLists} />\r\n        </Grid>\r\n    );\r\n}\r\n","D:\\dev\\user-banking\\client\\src\\components\\InterBank\\index.js",[],"D:\\dev\\user-banking\\client\\src\\components\\DebtReminder\\index.js",[],"D:\\dev\\user-banking\\client\\src\\actions\\history.js",[],"D:\\dev\\user-banking\\client\\src\\components\\common\\FormTransfer.js",[],"D:\\dev\\user-banking\\client\\src\\components\\Menu\\index.js",["161"],"D:\\dev\\user-banking\\client\\src\\actions\\logout.js",[],"D:\\dev\\user-banking\\client\\src\\App.js",[],"D:\\dev\\user-banking\\client\\src\\helpers\\otp.js",[],{"ruleId":"162","severity":1,"message":"163","line":54,"column":8,"nodeType":"164","endLine":54,"endColumn":23,"suggestions":"165"},{"ruleId":"162","severity":1,"message":"166","line":106,"column":8,"nodeType":"164","endLine":106,"endColumn":29,"suggestions":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"168","replacedBy":"172"},{"ruleId":"170","replacedBy":"173"},{"ruleId":"162","severity":1,"message":"174","line":36,"column":8,"nodeType":"164","endLine":36,"endColumn":10,"suggestions":"175"},{"ruleId":"162","severity":1,"message":"176","line":71,"column":8,"nodeType":"164","endLine":71,"endColumn":23,"suggestions":"177"},{"ruleId":"168","replacedBy":"178"},{"ruleId":"170","replacedBy":"179"},{"ruleId":"162","severity":1,"message":"180","line":20,"column":8,"nodeType":"164","endLine":20,"endColumn":10,"suggestions":"181"},{"ruleId":"162","severity":1,"message":"163","line":15,"column":8,"nodeType":"164","endLine":15,"endColumn":17,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":11,"column":8,"nodeType":"185","messageId":"186","endLine":11,"endColumn":20},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["187"],"React Hook useEffect has missing dependencies: 'accountNumber', 'classes.receiveColor', 'history.limit', and 'history.page'. Either include them or remove the dependency array.",["188"],"no-native-reassign",["189"],"no-negated-in-lhs",["190"],["189"],["190"],"React Hook useEffect has missing dependencies: 'accountNumber' and 'dispatch'. Either include them or remove the dependency array.",["191"],"React Hook useEffect has a missing dependency: 'handleClickRow'. Either include it or remove the dependency array.",["192"],["189"],["190"],"React Hook useEffect has missing dependencies: 'dispatch', 'infoAccount.accountNumber', and 'recipientLists.length'. Either include them or remove the dependency array.",["193"],["194"],"no-unused-vars","'MoneyOffIcon' is defined but never used.","Identifier","unusedVar",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"no-global-assign","no-unsafe-negation",{"desc":"195","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [accountNumber, dispatch]",{"range":"206","text":"207"},"Update the dependencies array to be: [filterLists, filter, history.page, history.limit, accountNumber, classes.receiveColor]",{"range":"208","text":"209"},{"range":"210","text":"207"},"Update the dependencies array to be: [handleClickRow, recipientList]",{"range":"211","text":"212"},"Update the dependencies array to be: [dispatch, infoAccount.accountNumber, recipientLists.length]",{"range":"213","text":"214"},"Update the dependencies array to be: [account, dispatch]",{"range":"215","text":"216"},[2066,2081],"[accountNumber, dispatch]",[4086,4107],"[filterLists, filter, history.page, history.limit, accountNumber, classes.receiveColor]",[1377,1379],[2832,2847],"[handleClickRow, recipientList]",[851,853],"[dispatch, infoAccount.accountNumber, recipientLists.length]",[641,650],"[account, dispatch]"]